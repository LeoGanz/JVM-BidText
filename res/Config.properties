#-------------------------------------------------------
# Predefined input files for the analysis
#-------------------------------------------------------
INCLUSIONS=Inclusions.txt
#INCLUSIONS=Inclusions_alpaca.txt
EXCLUSIONS=Exclusions.txt
#EXCLUSIONS=Exclusions_alpaca.txt
SINK_DEFINITIONS=Sinks.txt
ARTIFICIAL_SOURCES=ArtificialSources.txt
API_PROPAGATION_RULES=ApiPropagationRules.txt
SENSITIVE_TERMS=SensitiveTerms.txt
#SENSITIVE_TERMS=SensitiveTerms_ComparisonCodeQL.txt


#-------------------------------------------------------
# Analysis options
#-------------------------------------------------------
# enable this option to prevent the matching of keywords as substrings in text analysis
# this can reduce the number of false positives, but can also lead to false negatives
# -> see section 3.4.4 in the thesis for more information
MATCH_ONLY_WHOLE_WORDS_IN_TEXT_ANALYSIS=false

# define prefixes used to identify callback methods for the use as entry points
# use comma separated list for prefixes
# -> see section 4.3.1 in the thesis for more information
PREFIXES_OF_CALLBACK_METHODS=on

# the analysis can have trouble if abstract methods are called from entry points
# enable this option to accept abstract methods themselves as entry points even if they do not override library methods
# -> see section 4.3.3 in the thesis for more information
USE_WORKAROUND_FOR_ABSTRACT=true

# enable this option to use any method with prefix as entry point regardless if the method overrides a library method etc.
# required if applications do not follow a strict naming convention for callback methods or for Spring applications
# -> see section 4.5 in the thesis for more information
USE_ANY_METHOD_WITH_PREFIX_AS_ENTRYPOINT=false

# enable this option to model dependency injection in Spring applications
# the option can stay enabled for non-Spring applications
ENABLE_SPRING_DI_PREPROCESSING=true

# enable this option to scan for entry points in Spring applications by annotations in addition to the check for callback methods
# -> see section 5.4 in the thesis for more information
# the option is only effective if spring DI processing is enabled
ENABLE_SPRING_ENTRYPOINT_DISCOVERY=true

# enable this option to provide a hint to the garbage collector after the intermediate class hierarchy is no longer needed
# -> see section 5.5 in the thesis for more information
# the option is only effective if spring DI processing is enabled
ENABLE_GARBAGE_COLLECTOR_HINT_AFTER_INTERMEDIATE_CLASS_HIERARCHY=true

# timeout for the analysis in minutes
TIMEOUT=20

# threshold of the number of nodes in the SDG the switch to context-insensitive analysis; recommended 1 million
THRESHOLD_CONTEXT_INSENSITIVE=1000000

# threshold of the number of nodes in the SDG the skip the analysis of an entry point; recommended 10 million
THRESHOLD_SKIP_ENTRYPOINT=10000000
